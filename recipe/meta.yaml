{% set version = "0.9.0.43" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64 and arm_variant_type == "sbsa"]
{% set platform = "linux-aarch64" %}  # [aarch64 and arm_variant_type == "tegra"]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]
{% set cuda_compiler_version = cuda_compiler_version | default("None") %}
{% set soname = version.split(".")[0] %}

{% set sha = "1d26f62a7141e81c604342a610deb8ad8d10e1c08cb59598881dc201e59f21a3" %}  # [linux64]
{% set sha = "03e37b8e0f2d67a1ee376e6ac54fa9d62284bbdbf9edf90ea7d0a05b4c45bce1" %}  # [aarch64 and arm_variant_type == "sbsa"]
{% set sha = "272d409945cd1c00beaa7f5d4c8197139aa32394358ea76d83f2cd2b51faf0c7" %}  # [win]

package:
  name: nvjpeg2000
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/nvjpeg2000/redist/libnvjpeg_2k/{{ platform }}/libnvjpeg_2k-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: {{ sha }}

build:
  number: 0
  skip: true  # [osx or ppc64le or cuda_compiler_version in (None, "None")]

requirements:
  build:
    - cf-nvidia-tools 1.*  # [linux]

outputs:

  - name: libnvjpeg2k{{ soname }}
    build:
      ignore_run_exports:
        - cuda-version
    files:
      - lib/libnvjpeg2k.so.*            # [linux]
      - Library\bin\nvjpeg2k*.dll       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cuda") }}
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_compiler_version }}
      run:
        # Any CUDA within the same major version
        # https://docs.nvidia.com/cuda/nvjpeg2000/userguide.html#prerequisites
        - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
    test:
      commands:
        - test -L $PREFIX/lib/libnvjpeg2k.so.{{ soname }}                            # [linux]
        - test -f $PREFIX/lib/libnvjpeg2k.so.{{ version }}                           # [linux]
        - if not exist %LIBRARY_BIN%\nvjpeg2k_{{ soname }}.dll exit 1                # [win]
    about:
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      summary: The nvjpeg2k runtume library.
      description: >-
        This is a runtime package only. Developers should install libnvjpeg2k-dev to build with nvjpeg2k.

  - name: libnvjpeg2k-dev
    build:
      run_exports:
        # FIXME: Pin to patch version until 1.0
        - {{ pin_subpackage("libnvjpeg2k" ~ soname, max_pin="x.x.x") }}
      ignore_run_exports:
        - cuda-version
    files:
      - lib/libnvjpeg2k.so                                  # [linux]
      # - lib/pkgconfig/nvjpeg*.pc                          # [linux]
      - include/nvjpeg*                                     # [linux]
      - Library\include\nvjpeg*                             # [win]
      - Library\lib\nvjpeg*.lib                              # [win]
    requirements:
      host:
        - {{ pin_subpackage("libnvjpeg2k" ~ soname, exact=True) }}
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_subpackage("libnvjpeg2k" ~ soname, exact=True) }}
        - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
    test:
      commands:
        - test -L $PREFIX/lib/libnvjpeg2k.so                                    # [linux]
        # - test -f $PREFIX/lib/pkgconfig/nvjpeg*.pc                            # [linux]
        - test -f $PREFIX/include/nvjpeg2k_version.h                            # [linux]
        - test -f $PREFIX/include/nvjpeg2k.h                                    # [linux]
        - if not exist %LIBRARY_INC%\nvjpeg2k_version.h exit 1                  # [win]
        - if not exist %LIBRARY_INC%\nvjpeg2k.h exit 1                          # [win]
        - if not exist %LIBRARY_LIB%\nvjpeg2k.lib exit 1                        # [win]

  - name: libnvjpeg2k-static
    build:
      skip: true  # [not linux]
      ignore_run_exports:
        - cuda-version
    files:
      - lib/libnvjpeg2k_static.a
    requirements:
      host:
        - {{ pin_subpackage("libnvjpeg2k-dev", exact=True) }}
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_subpackage("libnvjpeg2k-dev", exact=True) }}
        - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
    test:
      commands:
        - test -f $PREFIX/lib/libnvjpeg2k_static.a
    about:
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      summary: The nvjpeg2k static library.
      description: >-
        This is a static-linking package only. Developers should install libnvjpeg2k-dev to link dynamically with nvjpeg2k.

about:
  home: https://docs.nvidia.com/cuda/nvjpeg2000/
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: The nvJPEG2000 development package.
  description: >-
    The nvJPEG2000 library accelerates the decoding and encoding of JPEG2000 images on NVIDIA GPUs. The library is built on the CUDA platform and is supported on Pascal+ GPU architectures.

  doc_url: https://docs.nvidia.com/cuda/nvjpeg2000/

extra:
  feedstock-name: libnvjpeg2k
  recipe-maintainers:
    - conda-forge/cuda
